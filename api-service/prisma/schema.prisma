// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String       @unique
  name          String       @db.VarChar(64)
  bio           String?      @db.VarChar(256)
  password      String
  private       Boolean      @default(false)
  refresh_token String?
  created_at    DateTime     @default(now())
  posts         Post[]
  followers     UserFollow[] @relation("Follower")
  following     UserFollow[] @relation("Following")
  liked_posts   PostLike[]
  chats         UserChat[]   @relation("user_chat")
  messages      Message[]
  senders_chats UserChat[]
}

model UserFollow {
  id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  follower     User   @relation("Following", fields: [follower_id], references: [id])
  following_id String @db.Uuid
  following    User   @relation("Follower", fields: [following_id], references: [id])
  follower_id  String @db.Uuid

  @@unique([follower_id, following_id])
}

model Post {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content    String?
  author     User       @relation(fields: [author_id], references: [id])
  author_id  String     @db.Uuid
  created_at DateTime   @default(now())
  likes      PostLike[]
}

model PostLike {
  post     Post     @relation(fields: [post_id], references: [id])
  post_id  String   @db.Uuid
  user     User     @relation(fields: [user_id], references: [id])
  user_id  String   @db.Uuid
  liked_at DateTime @default(now())

  @@unique([post_id, user_id])
}

model Chat {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime   @default(now())
  messages   Message[]
  users      UserChat[]
}

model UserChat {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user        User     @relation("user_chat", fields: [user_id], references: [id])
  user_id     String   @db.Uuid
  chat        Chat     @relation(fields: [chat_id], references: [id])
  chat_id     String   @db.Uuid
  receiver    User     @relation(fields: [receiver_id], references: [id])
  receiver_id String   @db.Uuid
  created_at  DateTime @default(now())

  @@unique([user_id, chat_id])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  created_at DateTime @default(now())
  chat       Chat     @relation(fields: [chat_id], references: [id])
  chat_id    String   @db.Uuid
  author     User     @relation(fields: [author_id], references: [id])
  author_id  String   @db.Uuid
}
